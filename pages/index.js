import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { Abril_Fatface } from '@next/font/google'
import { useState } from 'react'
import { PostActivityModal } from '../components/postActivityModal'
import { Button } from 'reactstrap'
import { Navbar } from '../components/navbar';
import Activity from '../components/activity'

// *****************
// Constant for event organizer name
const eventOrganizerName = 'Adamo'
// ****************

const abril_fatface = Abril_Fatface({ weight: ['400'], subsets: ['latin'] })

export default function Activities({ initialActivities }) {
  const [showForm, setShowForm] = useState(false);
  const [activities, setActivities] = useState(initialActivities);

  const postData = async (activityData) => {
    const res = await fetch('/api/activity', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(activityData)
    });
    const newActivities = await res.json()
    setActivities(newActivities);
  }
  
  return (
    <div>
      <Navbar />
      <Head>
        <title>Agora</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={`${abril_fatface.className} ${styles.header}`} >
          Agora
        </h1>
        <p className={`${styles.text}`}>Which activities will you partake in?</p>

        <div className={styles.flexDiv}>
          <h2 
            className={`${abril_fatface.className} ${styles.subheader}`}
            >Planned Activities</h2>
          <Button 
            className={styles.postButton} 
            onClick={() => setShowForm(true)}
            >Post an Activity</Button>
        </div>
        {
          // Show only activities planned by logged in organizer
          activities && 
          activities.activities.includes(a => a.planner === eventOrganizerName) ?
          activities.activities.filter(a => a.planner === eventOrganizerName).map((activity, index) => (
            <div className='mb-3'>
              <Activity key={index} activity={activity} />
            </div>
          )) :
          <p>You have no planned activities.</p>
        }

        <div className={styles.flexDiv}>
          <h2 
            className={`${abril_fatface.className} ${styles.subheader}`}
            >Available Activities</h2>
          <p style={{ display: 'none' }}></p>
        </div>
        {
          // Show non-planned activities
          activities && activities.activities.filter(a => a.planner !== eventOrganizerName).map((activity, index) => (
            <div className='mb-3'>
              <Activity key={index} activity={activity} />
            </div>
          ))
        }
      </main>
      <PostActivityModal
        setShowForm={setShowForm}
        showForm={showForm}
        postData={postData}
        eventOrganizerName={eventOrganizerName}
       />
    </div>
  )
}

export async function getServerSideProps() {
  const res = await fetch('http://localhost:3000/api/activity');
  const initialActivities = await res.json();
  return {
    props: {
      initialActivities
    }
  }
}
